@model IEnumerable<Aplikacija.Models.Korisnik>
@{
    ViewData["Title"] = "Korisnici";
    var currentUserId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
}

<style>
    .users-hero {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 3rem 0 1rem 0;
        margin-top: -20px;
        position: relative;
        overflow: hidden;
    }
    
    .users-hero::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.4);
        z-index: 1;
    }
    
    .hero-pattern {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-image: radial-gradient(circle at 20% 80%, rgba(255,255,255,0.1) 2px, transparent 2px);
        background-size: 40px 40px;
        z-index: 1;
        animation: patternMove 20s linear infinite;
    }
    
    .hero-content {
        position: relative;
        z-index: 2;
    }
    
    .hero-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1rem;
        animation: fadeInUp 1s ease-out;
    }
    
    .hero-title-section {
        display: flex;
        align-items: center;
        gap: 1.5rem;
        flex: 1;
    }
    
    .hero-icon {
        width: 80px;
        height: 80px;
        background: rgba(255, 255, 255, 0.9);
        color: #667eea;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2.2rem;
        animation: iconPulse 3s ease-in-out infinite;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
        border: 3px solid white;
    }
    
    .hero-text {
        flex: 1;
    }
    
    .hero-title {
        font-size: 3.2rem;
        font-weight: 800;
        margin: 0 0 0.5rem 0;
        text-shadow: 3px 3px 6px rgba(0, 0, 0, 0.5);
        line-height: 1.1;
        color: white;
    }
    
    .hero-subtitle {
        font-size: 1.3rem;
        opacity: 1;
        margin: 0;
        font-weight: 600;
        color: rgba(255, 255, 255, 0.95);
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
    }
    
    .add-user-btn {
        background: linear-gradient(45deg, #f55f3a, #ff7b54);
        border: none;
        padding: 1.3rem 3rem;
        font-size: 1.2rem;
        font-weight: 800;
        border-radius: 50px;
        color: white;
        text-decoration: none;
        transition: all 0.3s ease;
        box-shadow: 0 8px 30px rgba(245, 95, 58, 0.6);
        display: inline-flex;
        align-items: center;
        gap: 0.75rem;
        animation: fadeInUp 1s ease-out 0.3s both;
        text-transform: uppercase;
        letter-spacing: 1.5px;
        border: 3px solid rgba(255, 255, 255, 0.4);
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
    }
    
    .add-user-btn:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(245, 95, 58, 0.6);
        color: white;
        text-decoration: none;
    }
    
    .table-container {
        background: #f8f9fa;
        padding: 3rem 0;
        margin-top: -50px;
        position: relative;
        z-index: 3;
    }
    
    .modern-table-wrapper {
        background: white;
        border-radius: 20px;
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        animation: fadeInUp 1s ease-out 0.6s both;
    }
    
    .table-header {
        background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
        color: white;
        padding: 1.5rem 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1rem;
    }
    
    .table-title {
        font-size: 1.3rem;
        font-weight: 600;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }
    
    .search-box {
        display: flex;
        align-items: center;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 25px;
        padding: 0.5rem 1rem;
        gap: 0.5rem;
        min-width: 250px;
    }
    
    .search-input {
        background: transparent;
        border: none;
        color: white;
        placeholder-color: rgba(255, 255, 255, 0.7);
        font-size: 0.95rem;
        flex: 1;
    }
    
    .search-input:focus {
        outline: none;
    }
    
    .search-input::placeholder {
        color: rgba(255, 255, 255, 0.7);
    }
    
    .modern-table {
        width: 100%;
        margin: 0;
        background: white;
    }
    
    .table-head {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    }
    
    .table-head th {
        padding: 1.5rem 1.25rem;
        border: none;
        font-weight: 700;
        color: #2c3e50;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        font-size: 0.9rem;
        position: relative;
    }
    
    .table-head th:not(:last-child)::after {
        content: '';
        position: absolute;
        right: 0;
        top: 50%;
        transform: translateY(-50%);
        width: 1px;
        height: 20px;
        background: #dee2e6;
    }
    
    .table-body tr {
        transition: all 0.3s ease;
        border: none;
    }
    
    .table-body tr:hover {
        background: linear-gradient(135deg, #f8f9fa 0%, #e3f2fd 100%);
        transform: scale(1.01);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }
    
    .table-body td {
        padding: 1.25rem;
        border: none;
        border-bottom: 1px solid #f1f3f4;
        vertical-align: middle;
        font-size: 0.95rem;
        color: #495057;
    }
    
    .user-info {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }
    
    .user-avatar {
        width: 40px;
        height: 40px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 600;
        font-size: 0.9rem;
        flex-shrink: 0;
    }
    
    .user-details {
        flex: 1;
    }
    
    .user-name {
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 0.25rem;
    }
    
    .user-meta {
        font-size: 0.85rem;
        color: #7f8c8d;
    }
    
    .role-badge {
        background: linear-gradient(135deg, #f55f3a 0%, #ff7b54 100%);
        color: white;
        padding: 0.4rem 0.8rem;
        border-radius: 15px;
        font-size: 0.8rem;
        font-weight: 600;
        display: inline-block;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .current-user-indicator {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: white;
        padding: 0.25rem 0.5rem;
        border-radius: 10px;
        font-size: 0.7rem;
        font-weight: 600;
        margin-left: 0.5rem;
        text-transform: uppercase;
    }
    
    .action-buttons {
        display: flex;
        gap: 0.5rem;
        align-items: center;
    }
    
    .action-btn {
        width: 35px;
        height: 35px;
        border-radius: 8px;
        border: none;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
        text-decoration: none;
        font-size: 0.9rem;
        position: relative;
        overflow: hidden;
    }
    
    .action-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(255, 255, 255, 0.2);
        opacity: 0;
        transition: opacity 0.3s ease;
    }
    
    .action-btn:hover::before {
        opacity: 1;
    }
    
    .action-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }
    
    .btn-view {
        background: linear-gradient(135deg, #17a2b8 0%, #138496 100%);
        color: white;
    }
    
    .btn-edit {
        background: linear-gradient(135deg, #ffc107 0%, #e0a800 100%);
        color: white;
    }
    
    .btn-delete {
        background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
        color: white;
    }
    
    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        color: #7f8c8d;
    }
    
    .empty-icon {
        font-size: 4rem;
        margin-bottom: 1rem;
        opacity: 0.5;
    }
    
    .stats-bar {
        background: white;
        padding: 1.5rem 2rem;
        border-top: 1px solid #f1f3f4;
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1rem;
    }
    
    .stats-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: #7f8c8d;
        font-size: 0.9rem;
    }
    
    .stats-number {
        color: #f55f3a;
        font-weight: 700;
    }
    
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    @@keyframes iconPulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.05); }
    }
    
    @@keyframes patternMove {
        0% { background-position: 0 0; }
        100% { background-position: 40px 40px; }
    }
    
    @@media (max-width: 768px) {
        .hero-title {
            font-size: 2rem;
        }
        
        .hero-header {
            flex-direction: column;
            text-align: center;
        }
        
        .search-box {
            min-width: 200px;
        }
        
        .table-header {
            flex-direction: column;
            text-align: center;
        }
        
        .modern-table {
            font-size: 0.85rem;
        }
        
        .table-head th,
        .table-body td {
            padding: 1rem 0.75rem;
        }
        
        .user-info {
            flex-direction: column;
            text-align: center;
        }
        
        .action-buttons {
            justify-content: center;
        }
        
        .stats-bar {
            flex-direction: column;
        }
    }
</style>

<!-- Hero sekcija -->
<div class="users-hero">
    <div class="hero-pattern"></div>
    <div class="container hero-content">
        <div class="hero-header">
            <div class="hero-title-section">
                <div class="hero-icon">
                    <i class="fas fa-users"></i>
                </div>
                <div class="hero-text">
                    <h1 class="hero-title">Lista korisnika</h1>
                    <p class="hero-subtitle">Upravljanje korisnicima sistema</p>
                </div>
            </div>
            
            @if (User.IsInRole("Admin"))
            {
                <a class="add-user-btn" asp-action="Create">
                    <i class="fas fa-plus"></i>
                    Novi korisnik
                </a>
            }
        </div>
    </div>
</div>

<!-- Table container -->
<div class="table-container">
    <div class="container">
        <div class="modern-table-wrapper">
            
            <!-- Table Header -->
            <div class="table-header">
                <h3 class="table-title">
                    <i class="fas fa-table"></i>
                    Korisnici
                </h3>
                <div class="search-box">
                    <i class="fas fa-search"></i>
                    <input type="text" class="search-input" id="searchInput" placeholder="Pretraži korisnike...">
                </div>
            </div>
            
            <!-- Table -->
            @if (Model.Any())
            {
                <table class="modern-table" id="usersTable">
                    <thead class="table-head">
                        <tr>
                            <th>Korisnik</th>
                            <th>Korisničko ime</th>
                            <th>Email</th>
                            @if (User.IsInRole("Admin"))
                            {
                                <th>Tip korisnika</th>
                            }
                            <th style="text-align: center;">Akcije</th>
                        </tr>
                    </thead>
                    <tbody class="table-body">
                        @foreach (var item in Model)
                        {
                            bool isCurrentUser = item.Id == currentUserId;
                            <tr data-user-name="@item.Ime @item.Prezime" data-username="@item.UserName" data-email="@item.Email">
                                <td>
                                    <div class="user-info">
                                        <div class="user-avatar">
                                            @item.Ime.Substring(0, 1)@item.Prezime.Substring(0, 1)
                                        </div>
                                        <div class="user-details">
                                            <div class="user-name">
                                                @item.Ime @item.Prezime
                                                @if (isCurrentUser)
                                                {
                                                    <span class="current-user-indicator">Vi</span>
                                                }
                                            </div>
                                            <div class="user-meta">Član od @DateTime.Now.Year</div>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <strong>@item.UserName</strong>
                                </td>
                                <td>@item.Email</td>
                                @if (User.IsInRole("Admin"))
                                {
                                    <td>
                                        <span class="role-badge">@item.Tip</span>
                                    </td>
                                }
                                <td style="text-align: center;">
                                    <div class="action-buttons">
                                        @if (User.IsInRole("Admin") || User.IsInRole("Recepcioner") || User.IsInRole("Trener") || isCurrentUser)
                                        {
                                            <a class="action-btn btn-view" asp-action="Details" asp-route-id="@item.Id" title="Detalji">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                        }
                                        @if (User.IsInRole("Admin") || User.IsInRole("Recepcioner"))
                                        {
                                            <a class="action-btn btn-edit" asp-action="Edit" asp-route-id="@item.Id" title="Uredi">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                        }
                                        @if (User.IsInRole("Admin"))
                                        {
                                            <a class="action-btn btn-delete" asp-action="Delete" asp-route-id="@item.Id" title="Obriši">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                
                <!-- Stats Bar -->
                <div class="stats-bar">
                    <div class="stats-item">
                        <i class="fas fa-users"></i>
                        Ukupno: <span class="stats-number" id="totalUsers">@Model.Count()</span>
                    </div>
                    <div class="stats-item">
                        <i class="fas fa-eye"></i>
                        Prikazano: <span class="stats-number" id="visibleUsers">@Model.Count()</span>
                    </div>
                    @if (User.IsInRole("Admin"))
                    {
                        <div class="stats-item">
                            <i class="fas fa-crown"></i>
                            Administratori: <span class="stats-number">@Model.Count(u => u.Tip.ToString() == "Administrator")</span>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="empty-state">
                    <div class="empty-icon">
                        <i class="fas fa-users-slash"></i>
                    </div>
                    <h4>Nema korisnika</h4>
                    <p>Trenutno nema registrovanih korisnika u sistemu.</p>
                    @if (User.IsInRole("Admin"))
                    {
                        <a class="add-user-btn" asp-action="Create">
                            <i class="fas fa-plus"></i>
                            Dodaj prvog korisnika
                        </a>
                    }
                </div>
            }
            
        </div>
    </div>
</div>

<script>
    // Search functionality
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchInput');
        const table = document.getElementById('usersTable');
        const visibleUsersSpan = document.getElementById('visibleUsers');
        
        if (searchInput && table) {
            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();
                const rows = table.querySelectorAll('tbody tr');
                let visibleCount = 0;
                
                rows.forEach(row => {
                    const name = row.dataset.userName.toLowerCase();
                    const username = row.dataset.username.toLowerCase();
                    const email = row.dataset.email.toLowerCase();
                    
                    const isVisible = name.includes(searchTerm) || 
                                    username.includes(searchTerm) || 
                                    email.includes(searchTerm);
                    
                    if (isVisible) {
                        row.style.display = '';
                        visibleCount++;
                    } else {
                        row.style.display = 'none';
                    }
                });
                
                if (visibleUsersSpan) {
                    visibleUsersSpan.textContent = visibleCount;
                }
            });
        }
    });
</script>