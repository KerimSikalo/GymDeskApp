@model IEnumerable<Aplikacija.Models.Termin>

@{
    ViewData["Title"] = "Dostupni termini";
}

<style>
    .appointments-container {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 2rem 0;
        position: relative;
        overflow: hidden;
    }

        .appointments-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%), radial-gradient(circle at 80% 20%, rgba(255, 255, 255, 0.1) 0%, transparent 50%);
            pointer-events: none;
        }

    .appointments-title {
        color: #ffffff;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3), 0 4px 8px rgba(0, 0, 0, 0.2);
        font-weight: 800;
        font-size: 2.8rem;
        text-align: center;
        margin-bottom: 3rem;
        letter-spacing: -0.02em;
        position: relative;
    }

        .appointments-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 3px;
            background: #ffffff;
            border-radius: 2px;
            box-shadow: 0 2px 8px rgba(255, 255, 255, 0.3);
        }

    .alert-modern {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(20px);
        border: none;
        border-radius: 16px;
        color: #495057;
        font-weight: 500;
        padding: 1rem 1.25rem;
        margin-bottom: 2rem;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
        border-left: 4px solid;
    }

        .alert-modern.alert-info {
            border-left-color: #17a2b8;
            background: linear-gradient(135deg, rgba(23, 162, 184, 0.1), rgba(255, 255, 255, 0.95));
        }

        .alert-modern.alert-danger {
            border-left-color: #dc3545;
            background: linear-gradient(135deg, rgba(220, 53, 69, 0.1), rgba(255, 255, 255, 0.95));
        }

        .alert-modern.alert-success {
            border-left-color: #28a745;
            background: linear-gradient(135deg, rgba(40, 167, 69, 0.1), rgba(255, 255, 255, 0.95));
        }

    .termin-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(20px);
        border-radius: 24px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.05), inset 0 1px 0 rgba(255, 255, 255, 0.8);
        position: relative;
        overflow: hidden;
        transition: all 0.4s ease;
        height: 100%;
        display: flex;
        flex-direction: column;
    }

        .termin-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: linear-gradient(90deg, #f55f3a, #e44e2e, #f55f3a);
            background-size: 200% 100%;
            animation: shimmer 3s linear infinite;
        }

    @@keyframes shimmer {
        0% {
            background-position: -200% 0;
        }

        100% {
            background-position: 200% 0;
        }
    }

    .termin-card:hover {
        transform: translateY(-8px) scale(1.02);
        box-shadow: 0 32px 64px rgba(0, 0, 0, 0.15), 0 16px 32px rgba(245, 95, 58, 0.1);
    }

    .card-body-modern {
        padding: 2rem;
        flex: 1;
        display: flex;
        flex-direction: column;
    }

    .termin-datetime {
        background: linear-gradient(135deg, #f55f3a, #e44e2e);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        font-size: 1.4rem;
        font-weight: 800;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .datetime-icon {
        background: linear-gradient(135deg, #f55f3a, #e44e2e);
        color: white;
        width: 40px;
        height: 40px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.1rem;
        box-shadow: 0 4px 12px rgba(245, 95, 58, 0.3);
        flex-shrink: 0;
    }

    .detail-row {
        display: flex;
        align-items: center;
        margin-bottom: 1rem;
        gap: 0.75rem;
    }

    .detail-icon {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        width: 32px;
        height: 32px;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.9rem;
        box-shadow: 0 3px 8px rgba(102, 126, 234, 0.25);
        flex-shrink: 0;
    }

    .detail-label {
        font-weight: 700;
        color: #495057;
        margin-right: 0.5rem;
    }

    .badge-modern {
        border-radius: 12px;
        padding: 0.4rem 0.8rem;
        font-size: 0.85rem;
        font-weight: 600;
        box-shadow: 0 3px 8px rgba(0, 0, 0, 0.15);
        border: none;
    }

    .badge-vrsta {
        background: linear-gradient(135deg, #f55f3a, #e44e2e);
        color: white;
    }

    .badge-info {
        background: linear-gradient(135deg, #17a2b8, #138496);
        color: white;
    }

    .badge-success {
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
    }

    .badge-danger {
        background: linear-gradient(135deg, #dc3545, #c82333);
        color: white;
    }

    .action-section {
        margin-top: auto;
        padding-top: 1.5rem;
        border-top: 1px solid rgba(0, 0, 0, 0.06);
    }

    .btn-modern {
        border-radius: 12px;
        padding: 0.75rem 1.5rem;
        font-weight: 600;
        font-size: 0.9rem;
        transition: all 0.3s ease;
        border: none;
        width: 100%;
        position: relative;
        overflow: hidden;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

        .btn-modern::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s ease;
        }

        .btn-modern:hover::before {
            left: 100%;
        }

    .btn-success-modern {
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
    }

        .btn-success-modern:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(40, 167, 69, 0.3);
            color: white;
        }

    .btn-warning-modern {
        background: linear-gradient(135deg, #ffc107, #ff8c00);
        color: white;
    }

        .btn-warning-modern:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(255, 193, 7, 0.3);
            color: white;
        }

    .status-text {
        color: #6c757d;
        font-style: italic;
        font-weight: 500;
        text-align: center;
        padding: 0.75rem;
        background: rgba(248, 249, 250, 0.8);
        border-radius: 12px;
        backdrop-filter: blur(5px);
    }

        .status-text.danger {
            color: #dc3545;
            background: rgba(220, 53, 69, 0.1);
            font-weight: 600;
        }

    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        color: rgba(255, 255, 255, 0.8);
    }

    .empty-state-icon {
        font-size: 4rem;
        margin-bottom: 1.5rem;
        opacity: 0.6;
    }

    .empty-state-title {
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 1rem;
    }

    .empty-state-text {
        font-size: 1.1rem;
        opacity: 0.8;
    }

    /* Grid animations */
    .col {
        animation: fadeInUp 0.6s ease-out;
        animation-fill-mode: both;
    }

        .col:nth-child(1) {
            animation-delay: 0.1s;
        }

        .col:nth-child(2) {
            animation-delay: 0.2s;
        }

        .col:nth-child(3) {
            animation-delay: 0.3s;
        }

        .col:nth-child(4) {
            animation-delay: 0.1s;
        }

        .col:nth-child(5) {
            animation-delay: 0.2s;
        }

        .col:nth-child(6) {
            animation-delay: 0.3s;
        }

        .col:nth-child(7) {
            animation-delay: 0.1s;
        }

        .col:nth-child(8) {
            animation-delay: 0.2s;
        }

        .col:nth-child(9) {
            animation-delay: 0.3s;
        }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Responsive design */
    @@media (max-width: 768px) {
        .appointments-container {
            padding: 1.5rem 1rem;
        }

        .appointments-title {
            font-size: 2.2rem;
            margin-bottom: 2rem;
        }

        .termin-card {
            border-radius: 20px;
        }

        .card-body-modern {
            padding: 1.5rem;
        }

        .termin-datetime {
            font-size: 1.2rem;
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
        }

        .datetime-icon {
            width: 36px;
            height: 36px;
        }

        .detail-row {
            flex-wrap: wrap;
            gap: 0.5rem;
        }
    }

    @@media (max-width: 576px) {
        .appointments-title {
            font-size: 1.8rem;
        }

        .card-body-modern {
            padding: 1.25rem;
        }

        .termin-datetime {
            font-size: 1.1rem;
        }
    }
</style>

<div class="appointments-container">
    <div class="container">
        <h2 class="appointments-title">
            📅 Dostupni termini
        </h2>

        @if (TempData["Message"] != null)
        {
            <div class="alert-modern alert-info">
                <i class="fas fa-info-circle me-2"></i>
                @TempData["Message"]
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert-modern alert-danger">
                <i class="fas fa-exclamation-triangle me-2"></i>
                @TempData["ErrorMessage"]
            </div>
        }
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert-modern alert-success">
                <i class="fas fa-check-circle me-2"></i>
                @TempData["SuccessMessage"]
            </div>
        }

        @if (Model.Any())
        {
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                @foreach (var t in Model.OrderBy(t => t.Datum).ThenBy(t => t.Vrijeme))
                {
                    var korisnikPrijavljen = t.Prijave.Any(p => p.ClanId == ViewContext.HttpContext.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value);
                    var vremeTermina = t.Datum.Add(t.Vrijeme.ToTimeSpan());
                    var mozeOtkazati = vremeTermina > DateTime.Now.AddHours(2);

                    <div class="col">
                        <div class="termin-card">
                            <div class="card-body-modern">
                                <div class="termin-datetime">
                                    <div class="datetime-icon">
                                        <i class="fas fa-calendar-alt"></i>
                                    </div>
                                    <div>
                                        @t.Datum.ToString("dd.MM.yyyy")<br>
                                        <small>u @t.Vrijeme.ToString(@"hh\:mm")</small>
                                    </div>
                                </div>

                                <div class="detail-row">
                                    <div class="detail-icon">
                                        <i class="fas fa-dumbbell"></i>
                                    </div>
                                    <span class="detail-label">Vrsta:</span>
                                    <span class="badge-modern badge-vrsta">@t.Vrsta</span>
                                </div>

                                <div class="detail-row">
                                    <div class="detail-icon">
                                        <i class="fas fa-user-tie"></i>
                                    </div>
                                    <span class="detail-label">Trener:</span>
                                    <span>@t.Trener?.Email</span>
                                </div>

                                <div class="detail-row">
                                    <div class="detail-icon">
                                        <i class="fas fa-info-circle"></i>
                                    </div>
                                    <span class="detail-label">Status:</span>
                                    @if (t.Vrsta == Aplikacija.Models.VrstaTreninga.Grupni)
                                    {
                                        <span class="badge-modern badge-info">@t.Prijave.Count() prijavljenih</span>
                                    }
                                    else if (t.Prijave.Any())
                                    {
                                        <span class="badge-modern badge-danger">Rezervisan</span>
                                    }
                                    else
                                    {
                                        <span class="badge-modern badge-success">Dostupan</span>
                                    }
                                </div>

                                <div class="action-section">
                                    @if (korisnikPrijavljen)
                                    {
                                        if (mozeOtkazati)
                                        {
                                            <form asp-action="OtkaziRezervaciju" asp-controller="Termin" method="post">
                                                <input type="hidden" name="terminId" value="@t.IdTermin" />
                                                <button type="submit" class="btn-modern btn-warning-modern"
                                                        onclick="return confirm('Da li ste sigurni da želite da otkažete rezervaciju?')">
                                                    <i class="fas fa-times me-2"></i>
                                                    Otkazi rezervaciju
                                                </button>
                                            </form>
                                        }
                                        else
                                        {
                                            <div class="status-text">
                                                <i class="fas fa-clock me-2"></i>
                                                Ne možete otkazati (manje od 2h)
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        if (t.Vrsta == Aplikacija.Models.VrstaTreninga.Individualni && t.Prijave.Any())
                                        {
                                            <div class="status-text danger">
                                                <i class="fas fa-ban me-2"></i>
                                                Popunjeno!
                                            </div>
                                        }
                                        else if (vremeTermina <= DateTime.Now)
                                        {
                                            <div class="status-text">
                                                <i class="fas fa-history me-2"></i>
                                                Prošao termin
                                            </div>
                                        }
                                        else
                                        {
                                            <form asp-action="Rezervisi" asp-controller="Termin" method="post">
                                                <input type="hidden" name="terminId" value="@t.IdTermin" />
                                                <button type="submit" class="btn-modern btn-success-modern">
                                                    <i class="fas fa-check me-2"></i>
                                                    Rezerviši
                                                </button>
                                            </form>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-state-icon">
                    <i class="fas fa-calendar-times"></i>
                </div>
                <h3 class="empty-state-title">Nema dostupnih termina</h3>
                <p class="empty-state-text">Trenutno nema termina za rezervaciju.</p>
            </div>
        }
    </div>
</div>